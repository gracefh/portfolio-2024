import {Svg, Engine, Bodies, Render, Runner, World, Body} from "matter-js"

const style = {
    stroke: "#000",
    "stroke-width": "0.25mm",
    fill: "#000"
}
const G = "M 43.701 28.8 L 72.701 28.8 A 2.591 2.591 0 0 1 74.576 29.576 A 3.269 3.269 0 0 1 74.601 29.6 A 2.711 2.711 0 0 1 75.234 30.557 A 2.634 2.634 0 0 1 75.401 31.5 L 75.401 42.1 A 35.193 35.193 0 0 1 74.313 51.131 A 23.399 23.399 0 0 1 65.051 64.65 Q 55.995 71.082 41.847 71.885 A 73.1 73.1 0 0 1 37.701 72 A 64.052 64.052 0 0 1 26.455 71.072 Q 17.022 69.388 10.351 64.65 A 23.719 23.719 0 0 1 0.731 49.514 A 37.5 37.5 0 0 1 0.001 41.9 L 0.001 30.1 Q 0.001 22.4 2.951 16.5 Q 5.901 10.6 11.201 7 Q 21.601 0 37.701 0 A 60.263 60.263 0 0 1 46.274 0.586 A 48.286 48.286 0 0 1 52.351 1.85 A 49.444 49.444 0 0 1 56.87 3.33 Q 59.052 4.171 60.833 5.146 A 23.203 23.203 0 0 1 62.951 6.45 A 39.689 39.689 0 0 1 67.439 10.064 A 33.021 33.021 0 0 1 69.701 12.4 A 31.066 31.066 0 0 1 71.958 15.284 Q 74.198 18.555 74.539 21.322 A 7.99 7.99 0 0 1 74.601 22.3 A 2.112 2.112 0 0 1 73.971 23.83 A 2.638 2.638 0 0 1 73.951 23.85 A 2.189 2.189 0 0 1 73.14 24.376 A 2.169 2.169 0 0 1 72.401 24.5 L 49.801 24.5 Q 47.801 24.5 46.901 23.4 A 10.005 10.005 0 0 0 39.594 19.547 A 13.727 13.727 0 0 0 38.451 19.5 A 22.049 22.049 0 0 0 35.187 19.726 Q 33.499 19.98 32.121 20.516 A 10.094 10.094 0 0 0 30.051 21.6 A 7.984 7.984 0 0 0 28.314 23.186 A 5.947 5.947 0 0 0 27.001 27 L 27.001 44 A 8.528 8.528 0 0 0 27.459 46.858 A 7.171 7.171 0 0 0 30.001 50.25 Q 32.342 52.006 36.174 52.392 A 22.758 22.758 0 0 0 38.451 52.5 A 22.25 22.25 0 0 0 41.613 52.29 Q 43.218 52.059 44.527 51.574 A 9.553 9.553 0 0 0 46.851 50.35 Q 49.801 48.2 49.901 45.3 L 43.701 45.3 A 2.591 2.591 0 0 1 41.826 44.525 A 3.269 3.269 0 0 1 41.801 44.5 A 2.711 2.711 0 0 1 41.168 43.543 A 2.634 2.634 0 0 1 41.001 42.6 L 41.001 31.5 A 2.591 2.591 0 0 1 41.776 29.625 A 3.269 3.269 0 0 1 41.801 29.6 A 2.711 2.711 0 0 1 42.758 28.967 A 2.634 2.634 0 0 1 43.701 28.8 Z"
const R = "M 60.8 43.901 L 73.1 66.901 A 1.623 1.623 0 0 1 73.222 67.241 Q 73.3 67.562 73.3 68.001 A 1.604 1.604 0 0 1 73.084 68.791 Q 72.926 69.075 72.65 69.351 A 2.189 2.189 0 0 1 71.84 69.877 A 2.169 2.169 0 0 1 71.1 70.001 L 48.4 70.001 Q 45.449 70.001 44.239 67.581 A 5.614 5.614 0 0 1 44.2 67.501 L 35.4 47.701 L 27 47.701 L 27 67.301 A 2.591 2.591 0 0 1 26.225 69.176 A 3.269 3.269 0 0 1 26.2 69.201 A 2.711 2.711 0 0 1 25.243 69.834 A 2.634 2.634 0 0 1 24.3 70.001 L 2.7 70.001 A 2.591 2.591 0 0 1 0.825 69.226 A 3.269 3.269 0 0 1 0.8 69.201 A 2.711 2.711 0 0 1 0.167 68.244 A 2.634 2.634 0 0 1 0 67.301 L 0 2.701 A 2.591 2.591 0 0 1 0.775 0.826 A 3.269 3.269 0 0 1 0.8 0.801 A 2.711 2.711 0 0 1 1.757 0.168 A 2.634 2.634 0 0 1 2.7 0.001 L 41.6 0.001 Q 55.3 0.001 63.3 6.501 A 21.135 21.135 0 0 1 71.218 21.974 A 29.466 29.466 0 0 1 71.3 24.201 A 27.542 27.542 0 0 1 70.223 32.144 A 19.812 19.812 0 0 1 60.8 43.901 Z M 39.5 18.601 L 27 18.601 L 27 29.201 L 39.5 29.201 A 5.342 5.342 0 0 0 40.923 29.022 A 3.823 3.823 0 0 0 42.9 27.751 A 5.151 5.151 0 0 0 44.005 25.279 A 7.038 7.038 0 0 0 44.1 24.101 Q 44.1 21.901 42.95 20.251 A 3.74 3.74 0 0 0 40.257 18.65 A 5.66 5.66 0 0 0 39.5 18.601 Z"
const A = "M 21.1 70.001 L 2.2 70.001 A 2.112 2.112 0 0 1 0.67 69.371 A 2.638 2.638 0 0 1 0.65 69.351 A 3.168 3.168 0 0 1 0.336 68.989 Q 0.185 68.784 0.102 68.583 A 1.253 1.253 0 0 1 0 68.101 Q 0 67.593 0.072 67.3 A 1.265 1.265 0 0 1 0.1 67.201 L 21.9 3.301 A 5.048 5.048 0 0 1 22.659 1.65 Q 23.546 0.426 25.177 0.11 A 6.436 6.436 0 0 1 26.4 0.001 L 54.2 0.001 Q 57.8 0.001 58.7 3.301 L 80.5 67.201 A 1.487 1.487 0 0 1 80.551 67.405 Q 80.589 67.618 80.598 67.92 A 6.387 6.387 0 0 1 80.6 68.101 A 1.279 1.279 0 0 1 80.476 68.635 Q 80.386 68.832 80.231 69.034 A 3.261 3.261 0 0 1 79.95 69.351 A 2.189 2.189 0 0 1 79.14 69.876 A 2.169 2.169 0 0 1 78.4 70.001 L 59.5 70.001 Q 56.3 70.001 55 66.601 L 52.5 59.601 L 28.1 59.601 L 25.6 66.601 A 6.768 6.768 0 0 1 24.747 68.206 Q 23.451 69.965 21.19 70 A 5.947 5.947 0 0 1 21.1 70.001 Z M 33.2 40.101 L 47.4 40.101 L 40.3 19.301 L 33.2 40.101 Z"
const C = "M 27.001 28 L 27.001 44 A 9.743 9.743 0 0 0 27.341 46.648 A 6.988 6.988 0 0 0 29.751 50.3 A 9.664 9.664 0 0 0 33.586 52.13 Q 35.126 52.5 36.951 52.5 A 22.422 22.422 0 0 0 39.201 52.396 Q 41.948 52.118 43.401 51.1 A 9.317 9.317 0 0 0 45.445 49.114 Q 46.149 48.196 46.732 47.037 A 15.718 15.718 0 0 0 46.751 47 Q 47.535 45.431 48.607 44.774 A 3.178 3.178 0 0 1 50.301 44.3 L 71.901 44.3 A 2.112 2.112 0 0 1 73.431 44.93 A 2.638 2.638 0 0 1 73.451 44.95 A 2.189 2.189 0 0 1 73.976 45.761 A 2.169 2.169 0 0 1 74.101 46.5 Q 74.101 55.8 65.301 63.5 A 26.741 26.741 0 0 1 60.539 66.744 Q 58.244 67.988 55.489 69.001 A 48.815 48.815 0 0 1 53.601 69.65 Q 46.301 72 36.401 72 Q 26.501 72 18.351 68.95 Q 10.201 65.9 5.101 58.95 A 26.008 26.008 0 0 1 0.451 47.624 A 35.063 35.063 0 0 1 0.001 41.9 L 0.001 30.1 A 33.263 33.263 0 0 1 0.977 21.856 A 25.655 25.655 0 0 1 5.101 13 A 29.738 29.738 0 0 1 19.974 2.491 Q 25.046 0.779 31.286 0.244 A 69.257 69.257 0 0 1 37.201 0 A 60.727 60.727 0 0 1 46.107 0.625 A 46.847 46.847 0 0 1 53.601 2.35 A 43.186 43.186 0 0 1 59.03 4.488 Q 62.68 6.237 65.301 8.5 A 31.193 31.193 0 0 1 70.128 13.726 Q 73.232 18.043 73.911 22.801 A 19.085 19.085 0 0 1 74.101 25.5 A 2.112 2.112 0 0 1 73.471 27.03 A 2.638 2.638 0 0 1 73.451 27.05 A 2.189 2.189 0 0 1 72.641 27.576 A 2.169 2.169 0 0 1 71.901 27.7 L 50.301 27.7 A 3.309 3.309 0 0 1 47.859 26.621 Q 47.247 25.993 46.751 25 A 13.102 13.102 0 0 0 45.471 22.92 Q 44.542 21.699 43.401 20.9 A 6.14 6.14 0 0 0 41.825 20.132 Q 39.941 19.5 36.951 19.5 A 14.675 14.675 0 0 0 33.882 19.803 Q 31.856 20.237 30.308 21.289 A 8.929 8.929 0 0 0 29.751 21.7 A 7.15 7.15 0 0 0 27.123 26.355 A 10.617 10.617 0 0 0 27.001 28 Z"
const E = "M 26 44.2 L 26 50.5 L 65.9 50.5 A 2.591 2.591 0 0 1 67.775 51.275 A 3.269 3.269 0 0 1 67.8 51.3 A 2.711 2.711 0 0 1 68.433 52.257 A 2.634 2.634 0 0 1 68.6 53.2 L 68.6 67.3 A 2.591 2.591 0 0 1 67.825 69.175 A 3.269 3.269 0 0 1 67.8 69.2 A 2.711 2.711 0 0 1 66.843 69.833 A 2.634 2.634 0 0 1 65.9 70 L 2.7 70 A 2.591 2.591 0 0 1 0.825 69.225 A 3.269 3.269 0 0 1 0.8 69.2 A 2.711 2.711 0 0 1 0.167 68.243 A 2.634 2.634 0 0 1 0 67.3 L 0 2.7 A 2.591 2.591 0 0 1 0.775 0.825 A 3.269 3.269 0 0 1 0.8 0.8 A 2.711 2.711 0 0 1 1.757 0.167 A 2.634 2.634 0 0 1 2.7 0 L 64.9 0 A 2.591 2.591 0 0 1 66.775 0.775 A 3.269 3.269 0 0 1 66.8 0.8 A 2.711 2.711 0 0 1 67.433 1.757 A 2.634 2.634 0 0 1 67.6 2.7 L 67.6 16.8 A 2.591 2.591 0 0 1 66.825 18.675 A 3.269 3.269 0 0 1 66.8 18.7 A 2.711 2.711 0 0 1 65.843 19.333 A 2.634 2.634 0 0 1 64.9 19.5 L 26 19.5 L 26 25.8 L 59.4 25.8 A 2.591 2.591 0 0 1 61.275 26.575 A 3.269 3.269 0 0 1 61.3 26.6 A 2.711 2.711 0 0 1 61.933 27.557 A 2.634 2.634 0 0 1 62.1 28.5 L 62.1 41.5 A 2.591 2.591 0 0 1 61.325 43.375 A 3.269 3.269 0 0 1 61.3 43.4 A 2.711 2.711 0 0 1 60.343 44.033 A 2.634 2.634 0 0 1 59.4 44.2 L 26 44.2 Z"
const H = "M 48.7 0 L 69.3 0 A 2.591 2.591 0 0 1 71.175 0.775 A 3.269 3.269 0 0 1 71.2 0.8 A 2.711 2.711 0 0 1 71.833 1.757 A 2.634 2.634 0 0 1 72 2.7 L 72 67.3 A 2.591 2.591 0 0 1 71.225 69.175 A 3.269 3.269 0 0 1 71.2 69.2 A 2.711 2.711 0 0 1 70.243 69.833 A 2.634 2.634 0 0 1 69.3 70 L 48.7 70 A 2.591 2.591 0 0 1 46.825 69.225 A 3.269 3.269 0 0 1 46.8 69.2 A 2.711 2.711 0 0 1 46.167 68.243 A 2.634 2.634 0 0 1 46 67.3 L 46 46 L 26 46 L 26 67.3 A 2.591 2.591 0 0 1 25.225 69.175 A 3.269 3.269 0 0 1 25.2 69.2 A 2.711 2.711 0 0 1 24.243 69.833 A 2.634 2.634 0 0 1 23.3 70 L 2.7 70 Q 1.6 70 0.8 69.25 A 2.494 2.494 0 0 1 0.01 67.557 A 3.391 3.391 0 0 1 0 67.3 L 0 2.7 A 2.591 2.591 0 0 1 0.775 0.825 A 3.269 3.269 0 0 1 0.8 0.8 A 2.711 2.711 0 0 1 1.757 0.167 A 2.634 2.634 0 0 1 2.7 0 L 23.3 0 A 2.591 2.591 0 0 1 25.175 0.775 A 3.269 3.269 0 0 1 25.2 0.8 A 2.711 2.711 0 0 1 25.833 1.757 A 2.634 2.634 0 0 1 26 2.7 L 26 23.2 L 46 23.2 L 46 2.7 A 2.591 2.591 0 0 1 46.775 0.825 A 3.269 3.269 0 0 1 46.8 0.8 A 2.711 2.711 0 0 1 47.757 0.167 A 2.634 2.634 0 0 1 48.7 0 Z" 
const U = "M 0 40.9 L 0 2.7 A 2.591 2.591 0 0 1 0.775 0.825 A 3.269 3.269 0 0 1 0.8 0.8 A 2.711 2.711 0 0 1 1.757 0.167 A 2.634 2.634 0 0 1 2.7 0 L 23.6 0 A 2.591 2.591 0 0 1 25.475 0.775 A 3.269 3.269 0 0 1 25.5 0.8 A 2.711 2.711 0 0 1 26.133 1.757 A 2.634 2.634 0 0 1 26.3 2.7 L 26.3 42.5 A 9.743 9.743 0 0 0 26.64 45.148 A 6.988 6.988 0 0 0 29.05 48.8 Q 31.473 50.738 35.408 50.969 A 18.653 18.653 0 0 0 36.5 51 Q 41.2 51 43.95 48.8 A 7.15 7.15 0 0 0 46.578 44.145 A 10.617 10.617 0 0 0 46.7 42.5 L 46.7 2.7 A 2.591 2.591 0 0 1 47.475 0.825 A 3.269 3.269 0 0 1 47.5 0.8 A 2.711 2.711 0 0 1 48.457 0.167 A 2.634 2.634 0 0 1 49.4 0 L 70.3 0 A 2.591 2.591 0 0 1 72.175 0.775 A 3.269 3.269 0 0 1 72.2 0.8 A 2.711 2.711 0 0 1 72.833 1.757 A 2.634 2.634 0 0 1 73 2.7 L 73 40.9 A 38.421 38.421 0 0 1 72.044 49.762 Q 69.932 58.674 63.15 63.7 A 34.383 34.383 0 0 1 51.977 69.059 Q 47.292 70.394 41.734 70.811 A 69.992 69.992 0 0 1 36.5 71 Q 23.878 71 15.178 66.879 A 31.741 31.741 0 0 1 9.85 63.7 Q 0 56.4 0 40.9 Z"
const N = "M 47.3 0.001 L 65.9 0.001 A 2.591 2.591 0 0 1 67.775 0.776 A 3.269 3.269 0 0 1 67.8 0.801 A 2.711 2.711 0 0 1 68.433 1.758 A 2.634 2.634 0 0 1 68.6 2.701 L 68.6 67.301 A 2.591 2.591 0 0 1 67.825 69.176 A 3.269 3.269 0 0 1 67.8 69.201 A 2.711 2.711 0 0 1 66.843 69.834 A 2.634 2.634 0 0 1 65.9 70.001 L 49.8 70.001 A 4.713 4.713 0 0 1 46.213 68.393 A 6.729 6.729 0 0 1 45.8 67.901 L 24 40.101 L 24 67.301 A 2.591 2.591 0 0 1 23.225 69.176 A 3.269 3.269 0 0 1 23.2 69.201 A 2.711 2.711 0 0 1 22.243 69.834 A 2.634 2.634 0 0 1 21.3 70.001 L 2.7 70.001 A 2.591 2.591 0 0 1 0.825 69.226 A 3.269 3.269 0 0 1 0.8 69.201 A 2.711 2.711 0 0 1 0.167 68.244 A 2.634 2.634 0 0 1 0 67.301 L 0 2.701 A 2.591 2.591 0 0 1 0.775 0.826 A 3.269 3.269 0 0 1 0.8 0.801 A 2.711 2.711 0 0 1 1.757 0.168 A 2.634 2.634 0 0 1 2.7 0.001 L 18.9 0.001 A 4.579 4.579 0 0 1 22.411 1.532 A 6.031 6.031 0 0 1 22.8 2.001 L 44.6 32.101 L 44.6 2.701 A 2.591 2.591 0 0 1 45.375 0.826 A 3.269 3.269 0 0 1 45.4 0.801 A 2.711 2.711 0 0 1 46.357 0.168 A 2.634 2.634 0 0 1 47.3 0.001 Z"


const toVertices = (path: string) => {
    const pathEl = document.createElementNS(
        'http://www.w3.org/2000/svg',
        'path'
      )
      pathEl.setAttribute('d', path)
    console.log(pathEl)
    return Svg.pathToVertices(pathEl, 1)
  }
  
  const toBody = function (letter: string) {
    const vertices = toVertices(letter)
  
    return Bodies.fromVertices(0, 0, [vertices], {
      render: {
        fillStyle: '#fff',
        strokeStyle: '#fff',
        lineWidth: 1,
      }
    })
  }
  
 export const FallingText = () => {

    const firstNameBodies = [
        toBody(G),
        toBody(R),
        toBody(A),
        toBody(C),
        toBody(E),
      ]
    


// Create the engines
const firstNameEngine = Engine.create()
const rightEngine = Engine.create()

// Get both worlds
const leftWorld = firstNameEngine.world
const rightWorld = rightEngine.world

// Create the render instances with the same options
const options = {
  wireframes: false,
  width: 400,
  height: 600,
  background: '#000'
}

const leftRender = Render.create({
  element: document.querySelector('#left') as HTMLElement,
  engine: firstNameEngine,
  options
})
const rightRender = Render.create({
  element: document.querySelector('#right') as HTMLElement,
  engine: firstNameEngine,
  options
})

Render.run(leftRender)
const leftRunner = Runner.create()
Runner.run(leftRunner, firstNameEngine)

Render.run(rightRender)
const rightRunner = Runner.create()
Runner.run(rightRunner, rightEngine)

// Stuff falls down
firstNameEngine.gravity.y = 1
rightEngine.gravity.y = -1

// The floor and ceiling are rectangles
World.add(leftWorld, Bodies.rectangle(0, -1, 800, 1, { isStatic: true }))
World.add(rightWorld, Bodies.rectangle(0, 601, 800, 1, { isStatic: true }))

firstNameBodies.forEach(
    (body) => World.add(leftWorld, body)
)


const positionLeftBodies = () =>{
    let leftY = 0
    firstNameBodies.forEach(body => {
      Body.setPosition(body, {
        x: 200,
        y: leftY,
      })
      Body.setAngle(body, -Math.PI / 2) // 90deg in Radians
  
      // Important to not have any "left-over" movement.
      Body.setVelocity(body, { x: 0, y: 0 })
  
      leftY -= 100
    })
  }
  

setInterval(() => {
    positionLeftBodies()
  }, 6000)

  return <div>
  </div>
  }

  